library(caTools)
set.seed(123)
split = sample.split(dataset$Salary, SplitRatio = 2/3)
training_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
install.packages('caTools')
library(caTools)
set.seed(123)
split = sample.split(dataset$Salary, SplitRatio = 2/3)
training_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
install.packages("caTools")
library(caTools)
set.seed(123)
split = sample.split(dataset$Salary, SplitRatio = 2/3)
training_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
dataset = read.csv('Salary_Data.csv')
source('~/Machine_Learning_AZ_Template_Folder/Machine Learning A-Z Template Folder/Part 2 - Regression/Section 4 - Simple Linear Regression/SimpleLinearRegression.R')
source('~/Machine_Learning_AZ_Template_Folder/Machine Learning A-Z Template Folder/Part 2 - Regression/Section 4 - Simple Linear Regression/SimpleLinearRegression.R')
dataset = read.csv('Salary_Data.csv')
dataset = read.csv('Salary_Data.csv')
setwd("~/Machine_Learning_AZ_Template_Folder/Machine Learning A-Z Template Folder/Part 2 - Regression/Section 4 - Simple Linear Regression")
dataset = read.csv('Salary_Data.csv')
library(caTools)
set.seed(123)
split = sample.split(dataset$Salary, SplitRatio = 2/3)
training_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
View(dataset)
View(test_set)
View(training_set)
# Fitting simple linear regression to the training set
regressor = lm(formula = Salary ~ YearsExperience, data = training_set)
# Predicting the test set results
Y_pred = predict(regressor, newdata = test_set)
View(regressor)
Y_pred
View(test_set)
install.packages('ggplot2')
library(ggplot2)
geom_point(aes(x = training_set$YearsExperience, y = training_set$Salary))
ggplot() +
geom_point(
aes(x = training_set$YearsExperience, y = training_set$Salary),
color = 'red'
)
geom_line(aes(x = training_set$YearsExperience, y = training_set$Salary))
library(ggplot2)
ggplot() +
geom_point(
aes(x = training_set$YearsExperience, y = training_set$Salary),
color = 'red'
) +
geom_line(aes(x = training_set$YearsExperience, y = training_set$Salary))
geom_line(aes(x = training_set$YearsExperience, y = predict(training_set$Salary)))
library(ggplot2)
ggplot() +
geom_point(
aes(x = training_set$YearsExperience, y = training_set$Salary),
color = 'red'
) +
geom_line(aes(x = training_set$YearsExperience, y = predict(training_set$Salary)))
library(ggplot2)
ggplot() +
geom_point(
aes(x = training_set$YearsExperience, y = training_set$Salary),
color = 'red'
) +
geom_line(aes(x = training_set$YearsExperience, y = predict(regressor, newdata = training_set)))
library(ggplot2)
ggplot() +
geom_point(aes(x = training_set$YearsExperience, y = training_set$Salary), color = 'red') +
geom_line(aes(x = training_set$YearsExperience, y = predict(regressor, newdata = training_set)), color = 'blue') +
ggtitle('Salary vs Experience (Training set)') +
xlab('Years of Experience') +
ylab('Salary')
ggplot() +
geom_point(aes(x = test_set$YearsExperience, y = test_set$Salary), color = 'red') +
geom_line(aes(x = training_set$YearsExperience, y = predict(regressor, newdata = training_set)), color = 'blue') +
ggtitle('Salary vs Experience (Test set)') +
xlab('Years of Experience') +
ylab('Salary')
library(ggplot2)
ggplot() +
geom_point(aes(x = training_set$YearsExperience, y = training_set$Salary), color = 'red') +
geom_line(aes(x = training_set$YearsExperience, y = predict(regressor, newdata = training_set)), color = 'blue') +
ggtitle('Salary vs Experience (Training set)') +
xlab('Years of Experience') +
ylab('Salary')
# Visualising the test set results
ggplot() +
geom_point(aes(x = test_set$YearsExperience, y = test_set$Salary), color = 'red') +
geom_line(aes(x = training_set$YearsExperience, y = predict(regressor, newdata = training_set)), color = 'blue') +
ggtitle('Salary vs Experience (Test set)') +
xlab('Years of Experience') +
ylab('Salary')
